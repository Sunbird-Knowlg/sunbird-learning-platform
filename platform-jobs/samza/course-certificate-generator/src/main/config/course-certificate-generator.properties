# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=__env__.course-certificate-generator
job.container.count=__course_certificate_generator_container_count__

# YARN
yarn.package.path=http://__yarn_host__:__yarn_port__/__env__/${project.artifactId}-${pom.version}-distribution.tar.gz

# Metrics
#metrics.reporters=snapshot,jmx
#metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
#metrics.reporter.snapshot.stream=kafka.__env__.lms.metrics
#metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Task
task.class=org.sunbird.jobs.samza.task.CourseCertificateGeneratorTask
task.inputs=kafka.__env__.coursebatch.certificate.request
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=__samza_checkpoint_replication_factor__
task.commit.ms=60000
task.window.ms=300000

# Serializers
serializers.registry.json.class=org.ekstep.jobs.samza.serializers.EkstepJsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.streams.metrics.samza.msg.serde=metrics
systems.kafka.consumer.zookeeper.connect=__zookeepers__
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.samza.offset.default=oldest
systems.kafka.producer.bootstrap.servers=__kafka_brokers__

# Job Coordinator
job.coordinator.system=kafka

# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=__samza_coordinator_replication_factor__

# Job specific configuration

# Metrics
output.metrics.job.name=course-certificate-generator
output.metrics.topic.name=__env__.pipeline_metrics

cassandra.lp.connection=__cassandra_lp_connection__

cassandra.connection.platform_courses=__cassandra_sunbird_connection__
kp.learning_service.base_url=__kp_learning_service_base_url__
courses.keyspace.name=sunbird_courses
search.es_conn_info=__search_lms_es_host__
job.time_zone=IST
sunbird.installation=__sunbird_installation__
learner_service.base_url=__learner_service_base_url__
cert_service.base_url=__cert_service_base_url__
certificate.base_path=__certificate_base_path__

notification.sms.body= Congratulations! You have successfully completed the training, @@TRAINING_NAME@@. You can download your certificate from the profile page.
kp.content_service.base_url=__kp_content_service_base_url__
cert_reg_service.base_url=__cert_reg_service_base_url__

# Redis Configuration
redis.host=__redis_host__
redis.port=__redis_port__
redis.maxConnections=4
notification.api.endpoint=/v2/notification

#Certificate Failed Topic Config
output.certificate.failed.events.topic.name=__env__.certificate.events.failed

certificate.generate.url=/v2/certs/generate
certificate.registry.add.url=/certs/v2/registry/add