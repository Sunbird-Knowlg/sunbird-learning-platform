# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=__env__.course-batch-updater
job.container.count=__course_batch_updater_container_count__

# YARN
yarn.package.path=http://__yarn_host__:__yarn_port__/__env__/${project.artifactId}-${pom.version}-distribution.tar.gz

# Metrics
#metrics.reporters=snapshot,jmx
#metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
#metrics.reporter.snapshot.stream=kafka.__env__.lms.metrics
#metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Task
task.class=org.sunbird.jobs.samza.task.CourseBatchUpdaterTask
task.inputs=kafka.__env__.coursebatch.job.request
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=__samza_checkpoint_replication_factor__
task.commit.ms=120000
task.window.ms=60000

# Serializers
serializers.registry.json.class=org.ekstep.jobs.samza.serializers.EkstepJsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.streams.metrics.samza.msg.serde=metrics
systems.kafka.consumer.zookeeper.connect=__zookeepers__
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.samza.offset.default=oldest
systems.kafka.producer.bootstrap.servers=__kafka_brokers__

# Job Coordinator
job.coordinator.system=kafka

# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=__samza_coordinator_replication_factor__

# Job specific configuration

# Metrics
output.metrics.job.name=course-batch-updater
output.metrics.topic.name=__env__.pipeline_metrics

#elastic-search
sunbird_es_cluster=__lms_es_cluster__
sunbird_es_host=__lms_es_host__ 
sunbird_es_port=__lms_es_port__

#Streamable media type list
stream.mime.type=__streaming_mime_type__
stream.keyspace.name=__env___platform_db
stream.keyspace.table=job_request

cassandra.lp.connection=__cassandra_lp_connection__
cassandra.lpa.connection=__cassandra_lpa_connection__

cassandra.connection.platform_courses=__cassandra_sunbird_connection__
kp.learning_service.base_url=__kp_learning_service_base_url__
courses.keyspace.name=sunbird_courses
search.es_conn_info=__search_lms_es_host__
job.time_zone=IST
sunbird.installation=__sunbird_installation__
kp.content_service.base_url=__kp_content_service_base_url__

# Redis Configuration
redis.host=__redis_host__
redis.port=__redis_port__
redis.maxConnections=4

course.progress.batch_size=__course_progress_batch_size__
course.batch.update_time=HH

# Added for pushing certificate generator event
course.batch.certificate.topic=__env__.coursebatch.certificate.request

# Configuration for certificate generator
certificate.auto.generate.enable=true 