# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=__env__.collection-migration

# YARN
yarn.package.path=http://__yarn_host__:__yarn_port__/__env__/${project.artifactId}-${pom.version}-distribution.tar.gz
yarn.container.memory.mb=__yarn_container_memory_mb__

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.__env__.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Task
task.class=org.ekstep.jobs.samza.task.CollectionMigrationTask
task.inputs=kafka.__env__.learning.job.request
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=1
task.commit.ms=60000
task.window.ms=300000
task.opts=-Dfile.encoding=UTF8
task.broadcast.inputs=kafka.__env__.system.command#0

# Serializers
serializers.registry.json.class=org.ekstep.jobs.samza.serializers.EkstepJsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.streams.metrics.samza.msg.serde=metrics
systems.kafka.consumer.zookeeper.connect=__zookeepers__
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.samza.offset.default=oldest
systems.kafka.producer.bootstrap.servers=__kafka_brokers__

# Job Coordinator
job.coordinator.system=kafka
# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=1

#Job specif configuration
redis.host=__redis_host__
redis.port=__redis_port__
redis.maxConnections=128
akka.request_timeout=300
environment.id=__environment_id__
graph.passport.key.base=__graph_passport_key__
route.domain=__lp_bolt_url__
route.bolt.read.domain=__lp_bolt_read_url__
route.bolt.write.domain=__lp_bolt_write_url__
route.all=__other_bolt_url__
route.bolt.read.all=__other_bolt_read_url__
route.bolt.write.all=__other_bolt_write_url__
shard.id=__mw_shard_id__

content.keyspace.name=__keyspace_name__
content.keyspace.table=__keyspace_table__
hierarchy.keyspace.name=__hierarchy_keyspace_name__
content.hierarchy.table=content_hierarchy
CONTENT_TO_VEC_URL=__content_to_vec_url__
platform-api-url=__lp_url__
ekstepPlatformApiUserId=ilimi
graph.dir="/data/graphDB"
graph.ids=["domain","language","en","hi","ka","te","ta"]
platform.auth.check.enabled=false
platform.cache.ttl=3600000
kafka.topics.backend.telemetry=__env__.telemetry.raw
kafka.topics.failed=__env__.learning.job.request

channel.default=in.ekstep

# Metrics
output.metrics.job.name=collection-migration
output.metrics.topic.name=__env__.pipeline_metrics

#Failed Topic Config
output.failed.events.topic.name=__env__.learning.events.failed

cassandra.lp.connection=__cassandra_lp_connection__

# Consistency Level for Multi Node Cassandra cluster
cassandra.lp.consistency.level=QUORUM

tmp.download.directory = /data/tmp/temp/
tmp.upload.directory = /data/tmp/temp/

#Current environment
cloud_storage.env=__cloud_storage_config_environment__

#Folder configuration
cloud_storage.content.folder=content
cloud_storage.asset.folder=assets
cloud_storage.artefact.folder=artifact
cloud_storage.bundle.folder=bundle
cloud_storage.media.folder=media
cloud_storage.ecar.folder=ecar_files
cloud_storage.upload.url.ttl=600