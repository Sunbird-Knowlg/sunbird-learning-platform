# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=__env__.auto-creator
job.container.count=__auto_creator_container_count__

# YARN
yarn.package.path=http://__yarn_host__:__yarn_port__/__env__/${project.artifactId}-${pom.version}-distribution.tar.gz

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.__env__.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory
output.metrics.job.name=auto-creator
output.metrics.topic.name=__env__.pipeline_metrics

# Task
task.class=org.sunbird.jobs.samza.task.AutoCreatorTask
task.inputs=kafka.__env__.auto.creation.job.request
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=__samza_checkpoint_replication_factor__
task.commit.ms=60000
task.window.ms=300000
task.opts=-Dfile.encoding=UTF8

# Serializers
serializers.registry.json.class=org.sunbird.jobs.samza.serializers.EkstepJsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.streams.metrics.samza.msg.serde=metrics
systems.kafka.consumer.zookeeper.connect=__zookeepers__
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.samza.offset.default=oldest
systems.kafka.producer.bootstrap.servers=__kafka_brokers__

# Job Coordinator
job.coordinator.system=kafka

# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=__samza_coordinator_replication_factor__

#Job Specific Config
graph.passport.key.base=__graph_passport_key__
output.failed.events.topic.name=__env__.auto.creation.job.request.failed
lp.tempfile.location=__lp_tmpfile_location__
max.iteration.count.samza.job=__max_iteration_count_for_samza_job__

kp.content_service.base_url=__kp_content_service_base_url__
kp.learning_service.base_url=__kp_learning_service_base_url__
kp.search_service_base_url=__kp_search_service_base_url__

auto_creator.actions=auto-create
auto_creator.allowed_object_types=Content
auto_creator.content_mandatory_fields=name,code,mimeType,primaryCategory,artifactUrl,lastPublishedBy
#TODO: Need to test, if collectionId will be overridden by publish, is there any impact
auto_creator.content_props_to_removed=identifier,downloadUrl,artifactUrl,variants,createdOn,collections,children,lastUpdatedOn,SYS_INTERNAL_LAST_UPDATED_ON,versionKey,s3Key,status,pkgVersion,toc_url,mimeTypesCount,contentTypesCount,leafNodesCount,childNodes,prevState,lastPublishedOn,flagReasons,compatibilityLevel,size,publishChecklist,publishComment,lastPublishedBy,rejectReasons,rejectComment,badgeAssertions,leafNodes,sYS_INTERNAL_LAST_UPDATED_ON,previewUrl,channel,objectType,visibility,version,pragma,prevStatus,streamingUrl,idealScreenSize,contentDisposition,lastStatusChangedOn,idealScreenDensity,lastSubmittedOn,publishError,flaggedBy,flags,lastFlaggedOn,publisher,lastUpdatedBy,lastSubmittedBy,uploadError,lockKey,publish_type,reviewError,totalCompressedSize,origin,originData,importError,questions
auto_creator.bulk_upload.mime_types=video/mp4
auto_creator.artifact_upload.max_size=62914560
auto_creator.content_create_props=name,code,mimeType,contentType,framework,processId,primaryCategory
auto_creator.artifact_upload.allowed_source=__auto_creator_artifact_allowed_sources__
# Delay between each api call in seconds
auto_creator.api_call_delay=1

auto_creator_g_service_acct_cred=__auto_creator_g_service_acct_cred__
auto_creator.gdrive.application_name=drive-download
auto_creator.initial_backoff_delay=120000
auto_creator.maximum_backoff_delay=1200000
auto_creator.increment_backoff_delay=2


# Folder Config
cloud_storage.content.folder=content
cloud_storage.artefact.folder=artifact

# Cloud store details
cloud_storage_type=__cloud_storage_type__
azure_storage_key=__azure_storage_key__
azure_storage_secret=__azure_storage_secret__
azure_storage_container=__azure_storage_container__
aws_storage_key=__aws_access_key_id__
aws_storage_secret=__aws_secret_access_key__
aws_storage_container=__aws_storage_container__

cephs3_storage_key=__cephs3_access_key_id__
cephs3_storage_secret=__cephs3_secret_access_key__
cephs3_storage_container=__cephs3_storage_container__
cephs3_storage_endpoint=__cephs3_storage_endpoint__