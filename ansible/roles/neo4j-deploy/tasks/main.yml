- name: checking the list of installed services
  service_facts:

- name: Stop the monit
  service: name=monit state=stopped
  become: yes
  when: ansible_facts.services.monit is defined

- name: Stop logstash process
  become: yes
  systemd: name=logstash state=stopped
  ignore_errors: yes

- name: Copy logstash configuration files for platform
  become: yes
  become_user: "{{learner_user}}"
  template: src=logstash-lp.j2  dest={{learner_user_home}}/logstash-{{logstash_version}}/logstash-lp.conf

- name: remove existing kernel extension jar file
  become: yes
  become_user: "{{learner_user}}"
  file: name={{ neo4j_home }}/plugins/{{ zip_file }} state=absent

- name: remove existing custom procedures jar file
  become: yes
  become_user: "{{learner_user}}"
  file: name={{ neo4j_home }}/plugins/{{ custom_procs_file }} state=absent

- name: Copy the kernel extension jar file
  become: yes
  become_user: "{{learner_user}}"
  copy: src={{ zip_file }} dest={{ neo4j_home }}/plugins/ owner={{ learner_user }} group={{ learner_user }}

- name: Copy the custom procedures jar file
  become: yes
  become_user: "{{learner_user}}"
  copy: src={{ custom_procs_file }} dest={{ neo4j_home }}/plugins/ owner={{ learner_user }} group={{ learner_user }}

- name: Start logstash process
  become: yes
  systemd: name=logstash state=started

- name: make sure neo4j unique key constraint enabled
  shell: echo '{{item}}' | {{ neo4j_home }}/bin/cypher-shell
  with_items:
    - CREATE CONSTRAINT ON (domain:domain) ASSERT domain.IL_UNIQUE_ID IS UNIQUE;
    - CREATE INDEX ON :domain(IL_FUNC_OBJECT_TYPE);
    - CREATE INDEX ON :domain(IL_SYS_NODE_TYPE);

- name: Start the monit
  service: name=monit state=started
  become: yes
  when: ansible_facts.services.monit is defined


