- name: ensure restore dir exists
  file: path="{{ neo4j_restore_dir }}" state=directory owner={{ learner_user }} group={{ learner_user }}

- set_fact:
    neo4j_backup_file_path: "{{ neo4j_restore_dir }}/{{ neo4j_backup_file_name }}"

- name: download a file from azure storage
  become: true
  include_role:
    name: azure-cloud-storage
    tasks_from: blob-download.yml
  vars:
    blob_container_name: "{{ neo4j_backup_storage }}"
    blob_file_name: "{{ neo4j_backup_file_name }}"
    local_file_or_folder_path: "{{ neo4j_backup_file_path }}"
    storage_account_name: "{{ azure_management_storage_account_name }}"
    storage_account_key: "{{ azure_management_storage_account_key }}"
  when: cloud_service_provider == "azure"

- name: download file from gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: download.yml
  vars:
    gcp_bucket_name: "{{ gcloud_management_bucket_name }}"
    dest_folder_name: "{{ neo4j_backup_storage }}"
    dest_file_name: "{{ neo4j_backup_file_name }}"
    local_file_or_folder_path: "{{ neo4j_backup_file_path }}"
  when: cloud_service_provider == "gcloud"

- name: Check if neo4j is running
  become_user: "{{ learner_user }}"
  shell: ps -ef | grep "{{ neo4j_home }}"  | grep -v grep | wc -l
  register: neo4j_process
          
- name: stop the neo4j
  become: yes
  become_user: "{{ learner_user }}"
  shell:  bin/neo4j stop
  args:
    chdir: "{{ neo4j_home }}"
  when: "neo4j_process.stdout != '0'"

- name: unaarchive backup file
  become: yes
  become_user: "{{learner_user}}"
  unarchive: src={{neo4j_backup_file_path}} dest={{learner_user_home}} copy=no group={{learner_user}} owner={{learner_user}}

- name: delete existing graph db
  become: yes
  file:
    state: absent
    path: "{{ path_to_neo4j_db }}/graph.db"

- name: move graph db to database folder
  become: yes
  become_user: "{{learner_user}}"
  command: mv {{learner_user_home}}/learning_graph {{path_to_neo4j_db}}/graph.db

- name: Start neo4j
  become: yes
  become_user: "{{ learner_user }}"
  shell:  bin/neo4j start
  args:
    chdir: "{{ neo4j_home }}"

- name: delete restore directory
  become: yes
  file:
    state: absent
    path: "{{ neo4j_restore_dir }}"


